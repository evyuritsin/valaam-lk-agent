{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_NavBar = _resolveComponent(\"NavBar\");\n  const _component_NotAuthPage = _resolveComponent(\"NotAuthPage\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_NavBar), _createCommentVNode(\"nav>\\n    <router-link to=\\\"/\\\">Home</router-link> |\\n    <router-link to=\\\"/about\\\">About</router-link>\\n  </nav\"), !$options.isAuth ? (_openBlock(), _createBlock(_component_NotAuthPage, {\n    key: 0\n  })) : (_openBlock(), _createBlock(_component_router_view, {\n    key: 1\n  }))], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;;6DACCA,aAAUC,oBACVC,wIAGS,GACWC,eAAM,kBAA1BC,aAA8BC;IAAAC;EAAA,qBAC9BF,aAAsBG;IAAAD;EAAA","names":["_createVNode","_component_NavBar","_createCommentVNode","$options","_createBlock","_component_NotAuthPage","key","_component_router_view"],"sourceRoot":"","sources":["C:\\all-projects\\t-fabric\\valaam-lk-agent\\src\\App.vue"],"sourcesContent":["<template>\n\t<NavBar />\n\t<!--nav>\n    <router-link to=\"/\">Home</router-link> |\n    <router-link to=\"/about\">About</router-link>\n  </nav-->\n\t<NotAuthPage v-if=\"!isAuth\" />\n\t<router-view v-else />\n</template>\n<script>\nimport { Options, Vue } from 'vue-class-component'\nimport NavBar from '@/components/NavBar.vue'\nimport NotAuthPage from '@/components/NotAuthPage.vue'\n\nimport store from './store'\n\nexport default {\n\tprops: [],\n\tcomponents: {\n\t\tNavBar,\n\t\tNotAuthPage,\n\t},\n\tdata: () => ({}),\n\tmethods: {},\n\tcomputed: {\n\t\tisAuth() {\n\t\t\treturn store.getters['isAuth']\n\t\t},\n\t},\n}\n</script>\n<style lang=\"scss\"></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}